# always-on server
version: "3.8"
x-logging: &default-logging
  driver: json-file
  options:
    max-file: ${DOCKERLOGGING_MAXFILE}
    max-size: ${DOCKERLOGGING_MAXSIZE}

# always-on server

services:
#   adguardhome:
#     container_name: adguardhome
#     image: adguard/adguardhome
#     restart: unless-stopped
#     logging: *default-logging
#     ports:
#       - 3000:80/tcp
#       - 53:53/tcp
#       - 53:53/udp
#       - 67:67/udp
#       - 68:68/tcp
#       - 68:68/udp
#     environment:
#       - PUID=${ID}
#       - PGID=${ID}
#       - TZ=${TZ}
#     volumes:
#       - /${CONFIG}/adguardhome:/opt/adguardhome/work
#       - /${CONFIG}/adguardhome/config:/opt/adguardhome/conf
      
  heimdall:
    image: ghcr.io/linuxserver/heimdall
    container_name: heimdall
    restart: unless-stopped
    logging: *default-logging
    environment:
      - PUID=${ID}
      - PGID=${ID}
      - TZ=${TZ}
    volumes:
      - /${CONFIG}/heimdall:/config
    ports:
      - 90:80
      
  qbittorrent:
    container_name: qbittorrent
    image: hotio/qbittorrent
    logging: *default-logging
    restart: unless-stopped
    ports:
      - 8100:8080
    environment:
      - PUID=${ID}
      - PGID=${ID}
      - UMASK=${UMASK}
      - TZ=${TZ}
    volumes:
      - /${CONFIG}/qbittorrent:/config
      - $HOME/qbt:/home/agneev/qbt

  statping:
    container_name: statping
    image: statping/statping:dev
    restart: unless-stopped
    logging:
      driver: none
    volumes:
      - /${CONFIG}/statping:/app
    ports:
      - 8300:8080

  openspeedtest:
    image: openspeedtest/latest
    container_name: openspeedtest
    restart: unless-stopped
    logging: *default-logging
    ports:
      - 8200:8080

  homebridge:
    image: oznu/homebridge:latest
    container_name: homebridge
    logging: *default-logging
    restart: unless-stopped
    network_mode: host
    environment:
      - TZ=${TZ}
      - PGID=${ID}
      - PUID=${ID}
      - HOMEBRIDGE_CONFIG_UI=1
      - HOMEBRIDGE_CONFIG_UI_PORT=8581
    volumes:
      - /${CONFIG}/homebridge:/homebridge
  portainer:
    image: portainer/portainer-ce
    container_name: portainer-server
    restart: always
    ports: 
      - 8000:8000
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /${CONFIG}/portainer_data:/data

---

# falcon server

services:
  node-red:
    container_name: node-red
    image: nodered/node-red
    logging: *default-logging
    restart: unless-stopped
    user: "${ID}:${ID}"
    environment:
      - TZ=${TZ}
    ports:
      - 1800:1880
    volumes:
      - /${CONFIG}/nodered:/data
      
  code-server:
    container_name: code-server
    image: codercom/code-server
    logging: *default-logging
    restart: unless-stopped
    user: "${ID}:${ID}"
    ports:
      - 5500:8080
    environment:
      - DOCKER_USER=$USER
      - TZ=${TZ}
    volumes:
      - /${CONFIG}:/home/coder/.config
      # Project folders
      - $HOME/code-server:/home/coder/project
      - $HOME/scripts:/home/coder/scripts
      - $HOME/git:/home/coder/github
      - /opt/appdata/home-assistant:/home/coder/hassio

  nginxproxymanager:
    container_name: nginxproxymanager
    image: jc21/nginx-proxy-manager
    logging: *default-logging
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
    environment:
      DB_SQLITE_FILE: "/data/npm_db.sqlite"
      DISABLE_IPV6: 'true'
    volumes:
      - /${CONFIG}/nginx-proxy-manager/data:/data
      - /${CONFIG}/nginx-proxy-manager/letsencrypt:/etc/letsencrypt

  mealie:
    container_name: mealie
    image: hkotel/mealie
    restart: unless-stopped
    logging: *default-logging
    ports:
      - 9700:80
    environment:
      - TZ=${TZ}
    volumes:
      - /${CONFIG}/mealie:/app/data

  homeassistant:
    container_name: home-assistant
    image: homeassistant/home-assistant
    restart: unless-stopped
    logging: *default-logging
    network_mode: host
    volumes:
      - /${CONFIG}/home-assistant:/config
      - /etc/localtime:/etc/localtime:ro
      # MariaDB database
      - /run/mysqld/mysqld.sock:/run/mysqld/mysqld.sock
      # System sensors
      - $HOME/.homeassistant:/home/agneev:ro
      - /knox/.homeassistant:/knox:ro

  qbittorrent:
    container_name: qbittorrent
    image: hotio/qbittorrent
    restart: unless-stopped
    logging: *default-logging
    ports:
      - 8100:8080
    environment:
      - PUID=${ID}
      - PGID=${ID}
      - UMASK=${UMASK}
      - TZ=${TZ}
    volumes:
      - /${CONFIG}/qbittorrent:/config
      - /drive/local/qbt:/drive/local/qbt
      - /knox:/knox
      - $HOME/scripts:/scripts:ro
      # To get internal storage quota info
      - $HOME/.homeassistant:/home/agneev/qbt:ro

  speedtest-tracker:
    container_name: speedtest-tracker
    image: henrywhitaker3/speedtest-tracker:latest-arm
    restart: unless-stopped
    logging: *default-logging
    ports:
      - 8700:80
    environment:
      - PUID=${ID}
      - PGID=${ID}
      - UMASK=${UMASK}
      - TZ=${TZ}
      - OOKLA_EULA_GDPR=true
    volumes:
      - /${CONFIG}/speedtest-tracker:/config

  plexmediaserver:
    container_name: plexmediaserver
    image: hotio/plex
    restart: unless-stopped
    logging: *default-logging
    ports:
      - 32400:32400
    environment:
      - PUID=${ID}
      - PGID=${ID}
      - UMASK=${UMASK}
      - TZ=${TZ}
      - PLEX_PASS=no
      - PLEX_CLAIM
      - ADVERTISE_IP
      - ALLOWED_NETWORKS
    volumes:
      - /${CONFIG}/plexmediaserver/config:/config
      - /${CONFIG}/plexmediaserver/transcode:/transcode
      - /drive:/drive
      - /knox:/knox

  tautulli:
    container_name: tautulli
    image: tautulli/tautulli
    restart: unless-stopped
    logging: *default-logging
    ports:
      - 8181:8181
    environment:
      - PUID=${ID}
      - PGID=${ID}
      - UMASK=${UMASK}
      - TZ=${TZ}
    volumes:
      - /${CONFIG}/tautulli:/config

  overseerr:
    container_name: overseerr
    image: sctx/overseerr
    restart: unless-stopped
    logging:
      driver: none
    ports:
      - 5055:5055
    environment:
      - PUID=${ID}
      - PGID=${ID}
      - UMASK=${UMASK}
      - TZ=${TZ}
      - LOG_LEVEL=info
    volumes:
      - /${CONFIG}/overseerr:/app/config

  radarr:
    container_name: radarr
    image: hotio/radarr:nightly
    restart: unless-stopped
    logging: *default-logging
    ports:
      - 7878:7878
    environment:
      - PUID=${ID}
      - PGID=${ID}
      - UMASK=${UMASK}
      - TZ=${TZ}
    volumes:
      - /${CONFIG}/radarr:/config
      - $HOME/scripts:/scripts
      - /drive:/drive
      - /knox:/knox

  radarr4k:
    container_name: radarr4k
    image: hotio/radarr:nightly
    restart: unless-stopped
    logging: *default-logging
    ports:
      - 7879:7879
    environment:
      - PUID=${ID}
      - PGID=${ID}
      - UMASK=${UMASK}
      - TZ=${TZ}
    volumes:
      - /${CONFIG}/radarr4k:/config
      - $HOME/scripts:/scripts
      - /drive:/drive
      - /knox:/knox

  sonarr:
    container_name: sonarr
    image: hotio/sonarr:nightly
    restart: unless-stopped
    logging: *default-logging
    ports:
      - 8989:8989
    environment:
      - PUID=${ID}
      - PGID=${ID}
      - UMASK=${UMASK}
      - TZ=${TZ}
    volumes:
      - /${CONFIG}/sonarr:/config
      - $HOME/scripts:/scripts
      - /drive:/drive
      - /knox:/knox

  bazarr:
    container_name: bazarr
    image: hotio/bazarr
    restart: unless-stopped
    logging: *default-logging
    ports:
      - 6767:6767
    environment:
      - PUID=${ID}
      - PGID=${ID}
      - UMASK=${UMASK}
      - TZ=${TZ}
    volumes:
      - /${CONFIG}/bazarr:/config
      - /drive:/drive
      - /knox:/knox

  prowlarr:
    container_name: prowlarr
    image: hotio/prowlarr:nightly
    restart: unless-stopped
    logging: *default-logging
    ports:
      - 9696:9696
    environment:
      - PUID=${ID}
      - PGID=${ID}
      - UMASK=${UMASK}
      - TZ=${TZ}
    volumes:
      - /${CONFIG}/prowlarr:/config

  jackett:
    container_name: jackett
    image: hotio/jackett
    restart: unless-stopped
    logging: *default-logging
    ports:
      - 9117:9117
    environment:
      - PUID=${ID}
      - PGID=${ID}
      - UMASK=${UMASK}
      - TZ=${TZ}
    volumes:
      - /${CONFIG}/jackett:/config
  portainer-agent:
    image: portainer/agent
    container_name: portainer-agent
    restart: always
    ports:
      - 9001:9001
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes 