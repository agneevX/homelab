version: '3.9'

x-env: &env
  PGID: 1001
  PUID: 1001
  UMASK: 002
  TZ: Asia/Kolkata

x-labels: &pullio
  org.hotio.pullio.update: true
  org.hotio.pullio.notify: true
  org.hotio.pullio.discord.webhook: ${DISCORD_WEBHOOK}

volumes:
  netdata-lib:
    name: netdata-lib
  netdata-cache:
    name: netdata-cache

networks:
  default:
    name: network1
    ipam:
      config:
        - subnet: 172.18.0.0/16

services:

  plextraktsync:
    container_name: plextraktsync
    image: ghcr.io/taxel/plextraktsync
    restart: unless-stopped
    user: "1001:1001"
    command: ["watch"]
    depends_on:
      - plex
    environment:
      PTS_LOG_DIR: /logs
      TZ: Asia/Kolkata
    tmpfs:
      - /logs:size=10m,uid=1001,gid=1001
    volumes:
      - /opt/appdata/plextraktsync:/app/config
    labels:
      <<: *pullio

  cloudflared:
    container_name: cloudflared
    image: msnelling/cloudflared
    restart: unless-stopped
    command: ["cloudflared", "tunnel", "run"]
    depends_on:
      - traefik
    environment:
      NO_AUTOUPDATE: true
    volumes:
      - ~/.cloudflared:/etc/cloudflared
    labels:
      <<: *pullio

  aria2:
    container_name: aria2
    image: hurlenko/aria2-ariang
    restart: unless-stopped
    environment:
      ARIA2RPCPORT: 80
      <<: *env
    volumes:
      - /opt/appdata/aria2:/aria2/conf
      - ~/downloads:/aria2/data
    labels:
      <<: *pullio

#  scrypted:
#    container_name: scrypted
#    image: koush/scrypted
#    restart: unless-stopped
#    network_mode: host
#    logging:
#      driver: none
#    environment:
#      TZ: Asia/Kolkata
#    volumes:
#      - /opt/appdata/scrypted:/server/volume
#    labels:
#      traefik.http.services.scrypted-agneev.loadbalancer.server.port: 10080

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      GUNICORN_ACCESS_LOGFILE: /dev/null
    volumes:
      - /opt/appdata/pgadmin:/var/lib/pgadmin
    labels:
      <<: *pullio
    
  duplicacy:
    container_name: duplicacy
    image: hotio/duplicacy
    restart: unless-stopped
    hostname: duplicacy
    environment:
      <<: *env
    tmpfs:
      - /cache:size=200m
    volumes:
      - /opt/appdata/duplicacy:/config
      - /opt/appdata/duplicacy/logs:/logs
      - /opt/appdata/duplicacy/license.sh:/etc/cont-init.d/02-license
      #
      - /opt/appdata:/appdata
      - ~/:/ssd
    labels:
      <<: *pullio

  vnstat:
    image: vergoh/vnstat
    container_name: vnstat
    restart: unless-stopped
    network_mode: host
    environment:
      SERVER_NAME: falcon
      HTTP_PORT: 7000
      LARGE_FONTS: 1
      HTTP_LOG: /dev/null
    volumes:
      - /opt/appdata/vnstat/vnstat.conf:/etc/vnstat.conf
      - /opt/appdata/vnstat:/var/lib/vnstat
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    labels:
      traefik.http.services.vnstat-agneev.loadbalancer.server.port: 7000
      <<: *pullio

#  syncthing:
#    container_name: syncthing
#    image: linuxserver/syncthing
#    restart: unless-stopped
#    hostname: falcon
#    ports:
#      - 22000:22000
#    environment:
#      <<: *env
#    volumes:
#      - /opt/appdata/syncthing:/config
      #
#      - ~/:/ssd
#      - /mnt/mfs-drive:/drive
#      - /mnt/mfs-knox:/knox
#    labels:
#      traefik.http.services.syncthing-agneev.loadbalancer.server.port: 8384
#      <<: *pullio

  autoheal:
    container_name: autoheal
    image: willfarrell/autoheal
    restart: always
    network_mode: none
    environment:
      AUTOHEAL_CONTAINER_LABEL: all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      <<: *pullio

  traefik:
    container_name: traefik
    image: traefik:v2.6.0
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "traefik", "healthcheck"]
    extra_hosts:
      - "host.docker.internal:10.0.0.11"
    ports:
      - 80:80
      - 8000:8080
    volumes:
      - /opt/appdata/traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      <<: *pullio

  dozzle:
    container_name: dozzle
    image: amir20/dozzle
    restart: always
    ports:
      - 8888:8888
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      <<: *pullio

#  caddy:
#    container_name: caddy
#    image: hotio/caddy
#    restart: unless-stopped
#    depends_on:
#      - traefik
#    environment:
#      <<: *env
#    volumes:
#      - /opt/appdata/caddy:/config
#    labels:
#      traefik.http.services.caddy-agneev.loadbalancer.server.port: 8080
#      <<: *pullio

  archivebox:
    container_name: archivebox
    image: archivebox/archivebox:master
    restart: unless-stopped
    environment:
      MEDIA_MAX_SIZE: 750m
      <<: *env
    volumes:
      - /opt/appdata/archivebox:/data
    labels:
      <<: *pullio

  librespot:
    container_name: librespot
    image: agneev/librespot-alsa
    restart: unless-stopped
    command:
      - --name=Bedroom Speakers
      - --bitrate=320
      - --initial-volume=60
      - --autoplay
      - --disable-discovery
      - --username=$SPOTIFY_USERNAME
      - --password=$SPOTIFY_PASSWORD
    devices:
      - /dev/snd:/dev/snd
    labels:
      <<: *pullio

  hdidle:
    container_name: hdidle
    image: hotio/hdidle
    restart: unless-stopped
    network_mode: none
    environment:
      ARGS: "-i 600"
      <<: *env
    tmpfs:
      - /config:size=1m
    devices:
      - /dev/sdb:/dev/sdb
      - /dev/sdc:/dev/sdc
      - /dev/sdd:/dev/sdd
      - /dev/sde:/dev/sde
    labels:
      <<: *pullio
      
  filebrowser:
    image: filebrowser/filebrowser
    container_name: filebrowser
    restart: unless-stopped
    user: "1001:1001"
    healthcheck:
      disable: true
    environment:
      FB_ROOT: /files
      FB_CONFIG: /config/config.json
      FB_DATABASE: /config/filebrowser.db
      FB_DISABLE-EXEC: true
      FB_DISABLE-TYPE-DETECTION-BY-HEADER: true
      FB_DISABLE-PREVIEW-RESIZE: true
      FB_DISABLE-THUMBNAILS: true
    tmpfs:
      - /srv:size=1m
    volumes:
      - /opt/appdata/filebrowser:/config
      # 
      - ~/:/files/home
      - /opt/appdata:/files/appdata
      - /mnt:/files/mnt
    labels:
      traefik.http.routers.filebrowser.rule: Host(`files.falcon.nt`)
      <<: *pullio

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    user: "1001:1001"
    volumes:
      - /opt/appdata/grafana/config:/etc/grafana
      - /opt/appdata/grafana/data:/var/lib/grafana
    labels:
      <<: *pullio

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    user: "1001:1001"
    command:
      - --log.level=warn
      - --config.file=/config.yml
    volumes:
      - /opt/appdata/prometheus/prometheus.yml:/config.yml
      - /opt/appdata/prometheus:/prometheus
    labels:
      <<: *pullio

  shairport-sync:
    container_name: shairport-sync
    image: mikebrady/shairport-sync
    restart: unless-stopped
    network_mode: host
    command: "-c /config.conf"
    volumes:
      - /opt/appdata/shairport-sync/config.conf:/config.conf
    devices:
      - /dev/snd:/dev/snd
    labels:
      <<: *pullio

  freshrss:
    image: linuxserver/freshrss
    container_name: freshrss
    restart: unless-stopped
    environment:
      <<: *env
    volumes:
      - /opt/appdata/freshrss:/config
    labels:
      <<: *pullio

  netdata:
    image: netdata/netdata
    container_name: netdata
    hostname: falcon
    restart: unless-stopped
    healthcheck:
      test: "/usr/sbin/health.sh > /dev/null 2>&1"
    logging:
      driver: none
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    ports:
      - 19999:19999
    environment:
      PGID: 1001
      NETDATA_CLAIM_TOKEN: ${NETDATA_CLAIM_TOKEN}
      NETDATA_CLAIM_URL: https://app.netdata.cloud
      NETDATA_CLAIM_ROOMS: ${NETDATA_CLAIM_ROOMS}
    volumes:
      - /opt/appdata/netdata:/etc/netdata
      - netdata-lib:/var/lib/netdata
      - netdata-cache:/var/cache/netdata
      # OS access
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      <<: *pullio

  yacht:
    container_name: yacht
    image: selfhostedpro/yacht:devel
    restart: always
    environment:
      DISABLE_AUTH: True
      SECRET_KEY: key
      <<: *env
    volumes:
      - /opt/appdata/yacht:/config
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      <<: *pullio
  
  scrutiny:
    container_name: scrutiny
    image: hotio/scrutiny
    restart: unless-stopped
    logging:
      driver: none
    cap_add:
      - SYS_RAWIO
    environment:
      INTERVAL: 10800
      <<: *env
    volumes:
      - /run/udev:/run/udev:ro
      - /opt/appdata/scrutiny:/config
    devices:
      - /dev/sda:/dev/sda:ro
      - /dev/sdb:/dev/sdb:ro
      - /dev/sdc:/dev/sdc:ro
      - /dev/sdd:/dev/sdd:ro
      - /dev/sde:/dev/sde:ro
    labels:
      <<: *pullio
      
  node-red:
    container_name: node-red
    image: nodered/node-red
    restart: unless-stopped
    user: "1001:1001"
    environment:
      <<: *env
    volumes:
      - /opt/appdata/node-red:/data
    labels:
      <<: *pullio

  code-server:
    container_name: code-server
    image: linuxserver/code-server
    restart: unless-stopped
    environment:
      DOCKER_HOST: tcp://falcon.tailnet-d10c.ts.net:2375
      <<: *env
    volumes:
      - /opt/appdata/code-server:/config
      #
      - ~/git:/config/workspace/git
      - ~/scripts:/config/workspace/scripts
      - /opt/appdata/home-assistant:/config/workspace/ha-config
    labels:
      <<: *pullio
 
  home-assistant:
    container_name: home-assistant
    image: homeassistant/home-assistant
    restart: unless-stopped
    network_mode: host
    depends_on:
      - postgres
    environment:
      TZ: Asia/Kolkata
    volumes:
      - /opt/appdata/home-assistant:/config
    labels:
      traefik.http.services.home-assistant-agneev.loadbalancer.server.port: 8123
      <<: *pullio

  qbittorrent:
    container_name: qbittorrent
    image: hotio/qflood:release-4.3.9--4.7.0
    restart: unless-stopped
    environment:
      <<: *env
    volumes:
      - /opt/appdata/qbittorrent:/config
      - ~/scripts/qbt_post_dl.sh:/script.sh:ro
      #
      - ~/downloads:/downloads
      - ~/drive-local/local/qbt:/drive/local/qbt
      - /mnt/knox:/knox
    labels:
      traefik.http.routers.qbittorrent-agneev.service: qbittorrent-agneev@docker
      traefik.http.routers.qbittorrent-agneev.rule: Host(`qbt.falcon.nt`)
      traefik.http.services.qbittorrent-agneev.loadbalancer.server.port: 8080
      # Flood
      traefik.http.routers.flood.service: flood
      traefik.http.routers.flood.rule: Host(`flood.falcon.nt`)
      traefik.http.services.flood.loadbalancer.server.port: 3000

  plex:
    image: hotio/plex
    container_name: plex
    restart: unless-stopped
    network_mode: host
    healthcheck:
      test: ["CMD", "curl", "0:32400/identity", "-fso", "/dev/null"]
    environment:
      <<: *env
    tmpfs:
      - /transcode:size=4g
    volumes:
      - /opt/appdata/plex:/config
      #
      - /mnt/mfs-drive:/drive
      - /mnt/knox:/knox
    labels:
      traefik.http.services.plex.loadbalancer.server.port: 32400
      <<: *pullio

  tautulli:
    container_name: tautulli
    image: linuxserver/tautulli
    restart: unless-stopped
    ports:
      - 8181:8181
    environment:
      TP_THEME: plex
      DOCKER_MODS: ghcr.io/gilbn/theme.park:tautulli
      <<: *env
    volumes:
      - /opt/appdata/tautulli:/config
      - /opt/appdata/plex/Logs:/plex-logs:ro
    labels:
      <<: *pullio

  autoscan:
    container_name: autoscan
    image: hotio/autoscan
    restart: unless-stopped
    ports:
      - 100.120.109.59:3030:3030
    environment:
      <<: *env
    volumes:
      - /opt/appdata/autoscan:/config
    labels:
      <<: *pullio

  radarr:
    container_name: radarr
    image: linuxserver/radarr:nightly
    restart: unless-stopped
    depends_on:
      - autoscan
    ports:
      - 7878:7878
    environment:
      TP_THEME: onedark
      TP_COMMUNITY_THEME: true
      DOCKER_MODS: ghcr.io/gilbn/theme.park:radarr
      <<: *env
    volumes:
      - /opt/appdata/radarr:/config
      - ~/scripts/radarr_connect.sh:/script.sh
      #
      - /mnt/mfs-drive:/drive
      - /mnt/knox:/knox
    labels:
      <<: *pullio

  radarr4k:
    container_name: radarr4k
    image: linuxserver/radarr:nightly
    restart: unless-stopped
    depends_on:
      - autoscan
    ports:
      - 7879:7878
    environment:
      TP_THEME: organizr
      TP_ADDON: radarr-4k-logo
      DOCKER_MODS: ghcr.io/gilbn/theme.park:radarr
      <<: *env
    volumes:
      - /opt/appdata/radarr4k:/config
      - ~/scripts/radarr_connect.sh:/script.sh
      #
      - /mnt/mfs-drive:/drive
      - /mnt/knox:/knox
    labels:
      <<: *pullio

  sonarr2:
    container_name: sonarr2
    image: linuxserver/sonarr:develop
    restart: unless-stopped
    environment:
      <<: *env
    volumes:
      - /opt/appdata/sonarr2:/config
      - ~/scripts/sonarr_connect.sh:/script.sh
      #
      - /mnt/mfs-drive:/drive

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:develop
    restart: unless-stopped
    depends_on:
      - autoscan
    ports:
      - 8989:8989
    environment:
      TP_THEME: plex
      DOCKER_MODS: ghcr.io/gilbn/theme.park:sonarr
      <<: *env
    volumes:
      - /opt/appdata/sonarr:/config
      - ~/scripts/sonarr_connect.sh:/script.sh
      #
      - /mnt/mfs-drive:/drive
      - /mnt/knox:/knox
    labels:
      <<: *pullio

  sonarr4k:
    container_name: sonarr4k
    image: linuxserver/sonarr:develop
    restart: unless-stopped
    depends_on:
      - autoscan
    ports:
      - 8990:8989
    environment:
      TP_THEME: organizr
      TP_ADDON: sonarr-4k-logo
      DOCKER_MODS: ghcr.io/gilbn/theme.park:sonarr
      <<: *env
    volumes:
      - /opt/appdata/sonarr4k:/config
      - ~/scripts/sonarr_connect.sh:/script.sh
      #
      - /mnt/mfs-drive:/drive
      - /mnt/knox:/knox
    labels:
      <<: *pullio

#  unpackerr:
#    container_name: unpackerr
#    image: hotio/unpackerr
#    restart: unless-stopped
#    environment:
      # Sonarr
#      UN_SONARR_0_URL: http://sonarr
#      UN_SONARR_0_API_KEY: ${SONARR_API_KEY}
      # Sonarr4K
#      UN_SONARR_1_URL: http://sonarr4k
#      UN_SONARR_1_API_KEY: ${SONARR4K_API_KEY}
      # Radarr
#      UN_RADARR_0_URL: http://radarr
#      UN_RADARR_0_API_KEY: ${RADARR_API_KEY}
      # Radarr4k
#      UN_RADARR_1_URL: http://radarr4k
#      UN_RADARR_1_API_KEY: ${RADARR4K_API_KEY}
#      <<: *env
#    tmpfs:
#      - /config:size=1m
#    volumes:
#      - ~/drive-local/local/qbt:/drive/local/qbt

#  tandoor:
#    container_name: tandoor
#    image: vabene1111/recipes
#    restart: unless-stopped
#    environment:
#      <<: *env
#    volumes:
#      - /opt/appdata/tandoor/static:/opt/recipes/staticfiles
#      - /opt/appdata/tandoor/media:/opt/recipes/mediafiles
#    labels:
#      <<: *pullio

  postgres:
    container_name: postgres
    image: postgres:14
    restart: unless-stopped
    user: 1001:1001
    shm_size: 128m
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - /opt/appdata/postgres/config.conf:/etc/postgresql/postgresql.conf
      - /opt/appdata/postgres/data:/var/lib/postgresql/data
    labels:
      traefik.enable: false
      <<: *pullio

#   youtube-dl:
#     container_name: youtube-dl
#     image: mikenye/youtube-dl
#     restart: unless-stopped
#     environment:
#       <<: *env
#     labels:
#       <<: *pullio

#   photoprism:
#     container_name: photoprism
#     image: photoprism/photoprism
#     restart: unless-stopped
#     security_opt:
#       - seccomp:unconfined
#       - apparmor:unconfined
#     working_dir: "/photoprism"
#     volumes:
#       - /opt/appdata/photoprism:/photoprism/storage
#       - /mnt/knox/photos:/photoprism/originals
#     environment:
#       PHOTOPRISM_UID: 1001
#       PHOTOPRISM_GID: 1001
#       PHOTOPRISM_DATABASE_DRIVER: sqlite
#     labels:
#       <<: *pullio
