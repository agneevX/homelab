version: '3.9'

x-env: &env
  PGID: 1001
  PUID: 1001
  UMASK: 002
  TZ: Asia/Kolkata

# x-volumes: &rclone

x-labels: &pullio
  org.hotio.pullio.update: true
  org.hotio.pullio.notify: true
  org.hotio.pullio.discord.webhook: $DISCORD_WEBHOOK

volumes:
  netdata-lib:
    name: netdata-lib
  netdata-cache:
    name: netdata-cache

networks:
  default:
    name: skynet
    ipam:
      config:
        - subnet: 172.18.0.0/16
          gateway: 172.18.0.1

services:


  nzbhydra2:
    container_name: nzbhydra2
    image: hotio/nzbhydra2
    restart: unless-stopped
    environment:
      <<: *pullio
    volumes:
      - /opt/appdata/nzbhydra2:/config

  spocon:
    container_name: spocon
    image: spocon/spocon
    restart: unless-stopped
    devices:
      - /dev/snd:/dev/snd
    labels:
      <<: *pullio

#  vnstat-dash:
#    container_name: vnstat-dash
#    image: amarston/vnstat-dashboard
#    restart: unless-stopped
#    ports:
#      - 7001:80
#    volumes:
#      - /opt/appdata/vnstat:/var/lib/vnstat:ro

  vnstat:
    image: vergoh/vnstat
    container_name: vnstat
    restart: unless-stopped
    network_mode: host
    environment:
      SERVER_NAME: falcon
      HTTP_PORT: 7000
      LARGE_FONTS: 1
      HTTP_LOG: /dev/null
    volumes:
      - /opt/appdata/vnstat/vnstat.conf:/etc/vnstat.conf
      - /opt/appdata/vnstat:/var/lib/vnstat
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    labels:
      traefik.http.services.vnstat.loadbalancer.server.port: 7000
      <<: *pullio

  lib-java:
    container_name: lib-java
    image: agneev/librespot-java
    network_mode: host
#    volumes:
#      - /opt/appdata/librespot-java/config.toml:/app/config.toml
    devices:
      - /dev/snd:/dev/snd

  syncthing:
    container_name: syncthing
    image: linuxserver/syncthing
    restart: unless-stopped
    hostname: falcon
    ports:
      - 22000:22000
    environment:
      <<: *env
    volumes:
      - /opt/appdata/syncthing:/config
      #
      - ~/:/ssd
      - /mnt/mfs-drive:/drive
      - /mnt/mfs-knox/knox
    labels:
      traefik.http.services.syncthing.loadbalancer.server.port: 8384
      <<: *pullio

  autoheal:
    container_name: autoheal
    image: willfarrell/autoheal
    restart: always
    network_mode: none
    environment:
      AUTOHEAL_CONTAINER_LABEL: all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      <<: *pullio

  traefik:
    container_name: traefik
    image: traefik:v2.5
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "traefik", "healthcheck"]
    extra_hosts:
      - "host.docker.internal:10.0.0.11"
    ports:
      - 80:80
      - 444:443
    volumes:
      - /opt/appdata/traefik:/etc/traefik
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      traefik.http.routers.traefik.service: api@internal
      <<: *pullio

  dozzle:
    container_name: dozzle
    image: amir20/dozzle
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      <<: *pullio

  caddy:
    container_name: caddy
    image: caddy
    restart: unless-stopped
    depends_on:
      - traefik
    tmpfs:
      - /data:size=10m
      - /config:size=10m
    volumes:
      - /opt/appdata/caddy/Caddyfile:/etc/caddy/Caddyfile
      - /opt/data/ariang:/ariang
      - /opt/appdata/tandoor/media:/tandoor
    labels:
      <<: *pullio

  archivebox:
    container_name: archivebox
    image: archivebox/archivebox:master
    restart: unless-stopped
    environment:
      MEDIA_MAX_SIZE: 750m
      <<: *env
    volumes:
      - /opt/appdata/archivebox:/data
    labels:
      <<: *pullio

  librespot:
    container_name: librespot
    image: agneev/librespot-alsa
    restart: unless-stopped
    healthcheck:
#      test: ["CMD", "wget", "www.spotify.com", "-nv", "-t1", "--spider"]
      test: ["CMD", "ping", "ap.spotify.com", "-c1", "-W1"]
      retries: 2
    command:
      - --name=Bedroom Speakers
      - --bitrate=320
      - --initial-volume=60
      - --autoplay
      - --disable-discovery
      - --username=$SPOTIFY_USERNAME
      - --password=$SPOTIFY_PASSWORD
    devices:
      - /dev/snd:/dev/snd
    labels:
      <<: *pullio

  hdidle:
    container_name: hdidle
    image: hotio/hdidle
    restart: unless-stopped
    network_mode: none
    environment:
      ARGS: "-i 600"
      <<: *env
    tmpfs:
      - /config:size=1m
    devices:
      - /dev/sdb:/dev/sdb
      - /dev/sdc:/dev/sdc
      - /dev/sdd:/dev/sdd
      - /dev/sde:/dev/sde
    labels:
      <<: *pullio

  filebrowser:
    image: filebrowser/filebrowser
    container_name: filebrowser
    restart: unless-stopped
    user: "1001:1001"
    command:
      - --disable-exec
      - --disable-type-detection-by-header
      - --disable-preview-resize
      - --disable-thumbnails
    environment:
      FB_ROOT: /files
      FB_CONFIG: /config/config.json
      FB_DATABASE: /config/filebrowser.db
    tmpfs:
      - /srv:size=1m
    volumes:
      - /opt/appdata/filebrowser:/config
      #
      - ~/:/files/home
      - /opt/appdata:/files/appdata
      - /mnt:/files/mnt
    labels:
      traefik.http.routers.filebrowser.rule: Host(`files.falcon.nt`)
      <<: *pullio

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    user: "1001:1001"
    # environment:
    #   GF_AUTH_DISABLE_LOGIN_FORM: true
    #   GF_AUTH_ANONYMOUS_ENABLED: true
    #   GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
    #   GF_SECURITY_ALLOW_EMBEDDING: true
    volumes:
      - /opt/appdata/grafana/config:/etc/grafana
      - /opt/appdata/grafana/data:/var/lib/grafana
    labels:
      <<: *pullio

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    user: "1001:1001"
    command:
      - --log.level=warn
      - --config.file=/config.yml
    volumes:
      - /opt/appdata/prometheus/prometheus.yml:/config.yml
      - /opt/appdata/prometheus:/prometheus
    labels:
      <<: *pullio

  shairport-sync:
    container_name: shairport-sync
    image: mikebrady/shairport-sync:unstable-development
    restart: unless-stopped
    network_mode: host
    command: -c /config.conf
    volumes:
      - /opt/appdata/shairport-sync/config.conf:/config.conf:ro
    devices:
      - /dev/snd:/dev/snd
    labels:
      <<: *pullio

  freshrss:
    image: linuxserver/freshrss
    container_name: freshrss
    restart: unless-stopped
    environment:
      <<: *env
    volumes:
      - /opt/appdata/freshrss:/config
    labels:
      <<: *pullio

  netdata:
    image: netdata/netdata
    container_name: netdata
    hostname: falcon
    restart: unless-stopped
    healthcheck:
      test: "/usr/sbin/health.sh > /dev/null 2>&1"
    logging:
      driver: none
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    ports:
      - 19999:19999
    environment:
      PGID: 1001
      NETDATA_CLAIM_TOKEN: $NETDATA_CLAIM_TOKEN
      NETDATA_CLAIM_URL: https://app.netdata.cloud
      NETDATA_CLAIM_ROOMS: $NETDATA_CLAIM_ROOMS
    volumes:
      - /opt/appdata/netdata:/etc/netdata
      - netdata-lib:/var/lib/netdata
      - netdata-cache:/var/cache/netdata
      # OS access
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      <<: *pullio

  yacht:
    container_name: yacht
    image: selfhostedpro/yacht:devel
    restart: always
    environment:
      DISABLE_AUTH: True
      SECRET_KEY: key
      <<: *env
    volumes:
      - /opt/appdata/yacht:/config
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      <<: *pullio

  scrutiny:
    container_name: scrutiny
    image: hotio/scrutiny
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "localhost:8080", "-fso", "/dev/null"]
    logging:
      driver: none
    cap_add:
      - SYS_RAWIO
    environment:
      INTERVAL: 10800
      <<: *env
    volumes:
      - /run/udev:/run/udev:ro
      - /opt/appdata/scrutiny:/config
    devices:
      - /dev/sda:/dev/sda:ro
      - /dev/sdb:/dev/sdb:ro
      - /dev/sdc:/dev/sdc:ro
      - /dev/sdd:/dev/sdd:ro
      - /dev/sde:/dev/sde:ro
    labels:
      <<: *pullio

  node-red:
    container_name: node-red
    image: nodered/node-red
    restart: unless-stopped
    user: "1001:1001"
    environment:
      <<: *env
    volumes:
      - /opt/appdata/node-red:/data
    labels:
      <<: *pullio

  code-server:
    container_name: code-server
    image: linuxserver/code-server
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "localhost:8443", "-fso", "/dev/null"]
    environment:
      DOCKER_HOST: tcp://10.0.0.11:2375
      <<: *env
    volumes:
      - /opt/appdata/code-server:/config
      #
      - ~/git:/config/workspace/git
      - ~/scripts:/config/workspace/scripts
      - /opt/appdata/home-assistant:/config/workspace/ha-config
    labels:
      traefik.http.routers.code-server.rule: Host(`code.falcon.nt`)
      <<: *pullio

  home-assistant:
    container_name: home-assistant
    image: homeassistant/home-assistant
    restart: unless-stopped
    network_mode: host
    healthcheck:
      test: ["CMD", "curl", "localhost:8123", "-fso", "/dev/null"]
    environment:
      <<: *env
    volumes:
      - /opt/appdata/home-assistant:/config
      - /run/mysqld/mysqld.sock:/run/mysqld/mysqld.sock
    labels:
      traefik.http.services.home-assistant.loadbalancer.server.port: 8123
      <<: *pullio

  qbittorrent:
    container_name: qbittorrent
    image: hotio/qflood
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "localhost:8080", "-fso", "/dev/null"]
    ports:
      - 12221:12221/tcp
      - 12221:12221/udp
    environment:
      FLOOD_AUTH: true
      <<: *env
    volumes:
      - /opt/appdata/qbittorrent:/config
      - ~/scripts/qbt_post_dl.sh:/script.sh:ro
      #
      - ~/qbittorrent:/downloads
      - ~/drive-local/local/qbt:/drive/local/qbt
      - /mnt/knox/qbt:/knox/qbt
    labels:
      traefik.http.routers.qbittorrent-agneev.service: qbittorrent-agneev@docker
      traefik.http.routers.qbittorrent-agneev.rule: Host(`qbt.falcon.nt`)
      traefik.http.services.qbittorrent-agneev.loadbalancer.server.port: 8080
      # Flood
      traefik.http.routers.flood.service: flood
      traefik.http.routers.flood.rule: Host(`flood.falcon.nt`)
      traefik.http.services.flood.loadbalancer.server.port: 3000

  plex:
    image: hotio/plex
    container_name: plex
    restart: unless-stopped
    network_mode: host
    healthcheck:
      test: ["CMD", "curl", "localhost:32400/identity", "-fso", "/dev/null"]
    environment:
      <<: *env
    tmpfs:
      - /transcode:size=4g
    volumes:
      - /opt/appdata/plex:/config
      #
      - /mnt/mfs-drive:/drive:ro
      - /mnt/knox:/knox:ro
    labels:
      traefik.http.services.plex.loadbalancer.server.port: 32400
      <<: *pullio

  tautulli:
    container_name: tautulli
    image: hotio/tautulli
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "localhost:8181", "-fso", "/dev/null"]
    environment:
      TP_HOTIO: true
      TP_THEME: plex
      <<: *env
    volumes:
      - /opt/appdata/tautulli:/config
      - /opt/theme-park/tautulli:/etc/cont-init.d/98-themepark
      - /opt/appdata/plex/Logs:/plex-logs:ro

  autoscan:
    container_name: autoscan
    image: hotio/autoscan
    restart: unless-stopped
#    healthcheck:
#      test: ["CMD", "curl", "localhost:3030/health", "-s"]
    ports:
      - 100.120.109.59:3030:3030
    environment:
      <<: *env
    volumes:
      - /opt/appdata/autoscan:/config
      #
  #    - /mnt/mfs-drive:/drive:ro
  #    - /mnt/knox:/knox:ro
    labels:
      <<: *pullio

  radarr:
    container_name: radarr
    image: hotio/radarr:nightly
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "localhost:7878", "-fso", "/dev/null"]
    ports:
      - 100.120.109.59:7878:7878
    environment:
      TP_HOTIO: true
      TP_THEME: onedark
      <<: *env
    volumes:
      - /opt/appdata/radarr:/config
      - ~/scripts/radarr_connect.sh:/script.sh
      - /opt/theme-park/radarr:/etc/cont-init.d/98-themepark
      #
      - /mnt/mfs-drive:/drive
      - /mnt/knox:/knox
    labels:
      <<: *pullio

  radarr4k:
    container_name: radarr4k
    image: hotio/radarr:nightly
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "localhost:7878", "-fso", "/dev/null"]
    ports:
      - 100.120.109.59:7879:7878
    environment:
      TP_HOTIO: true
      TP_THEME: organizr
      TP_ADDON: radarr-4k-logo
      <<: *env
    volumes:
      - /opt/appdata/radarr4k:/config
      - ~/scripts/radarr_connect.sh:/script.sh
      - /opt/theme-park/radarr:/etc/cont-init.d/98-themepark
      #
      - /mnt/mfs-drive:/drive
      - /mnt/knox:/knox
    labels:
      <<: *pullio

  sonarr:
    container_name: sonarr
    image: hotio/sonarr:nightly
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "localhost:8989/ping", "-s"]
    ports:
      - 100.120.109.59:8989:8989
    environment:
      TP_HOTIO: true
      TP_THEME: plex
      <<: *env
    volumes:
      - /opt/appdata/sonarr:/config
      - ~/scripts/sonarr_connect.sh:/script.sh
      - /opt/theme-park/sonarr:/etc/cont-init.d/98-themepark
      #
      - /mnt/mfs-drive:/drive
      - /mnt/knox:/knox
    labels:
      <<: *pullio

  sonarr4k:
    container_name: sonarr4k
    image: hotio/sonarr:nightly
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "localhost:8989/ping", "-s"]
    ports:
      - 100.120.109.59:8990:8989
    environment:
      TP_HOTIO: true
      TP_THEME: organizr
      TP_ADDON: sonarr-4k-logo
      <<: *env
    volumes:
      - /opt/appdata/sonarr4k:/config
      - ~/scripts/sonarr_connect.sh:/script.sh
      - /opt/theme-park/sonarr:/etc/cont-init.d/98-themepark
      #
      - /mnt/mfs-drive:/drive
      - /mnt/knox:/knox
    labels:
      <<: *pullio

#  tandoor:
#    container_name: tandoor
#    image: vabene1111/recipes
#    restart: unless-stopped
#    environment:
#      <<: *env
#    volumes:
#      - /opt/appdata/tandoor/static:/opt/recipes/staticfiles
#      - /opt/appdata/tandoor/media:/opt/recipes/mediafiles
#    labels:
#      <<: *pullio

#   postgres:
#     container_name: postgres
#     image: postgres
#     restart: unless-stopped
#     user: 1001:1001
#     shm_size: 128m
#     environment:
#       TZ: Asia/Kolkata
#     volumes:
#       - /opt/appdata/postgres/config.conf:/etc/postgresql/postgresql.conf
#       - /opt/appdata/postgres/data:/var/lib/postgresql/data
#     labels:
#       traefik.enable: false
#       <<: *pullio

#   youtube-dl:
#     container_name: youtube-dl
#     image: mikenye/youtube-dl
#     restart: unless-stopped
#     environment:
#       <<: *env
#     labels:
#       <<: *pullio

#   photoprism:
#     container_name: photoprism
#     image: photoprism/photoprism
#     restart: unless-stopped
#     healthcheck:
#       test: ["CMD", "wget", "localhost", "-nv", "-t1", "--spider"]
#     security_opt:
#       - seccomp:unconfined
#       - apparmor:unconfined
#     working_dir: "/photoprism"
#     volumes:
#       - /opt/appdata/photoprism:/photoprism/storage
#       - /mnt/knox/photos:/photoprism/originals
#     environment:
#       PHOTOPRISM_UID: 1001
#       PHOTOPRISM_GID: 1001
#       PHOTOPRISM_DATABASE_DRIVER: "sqlite"
#     labels:
#       <<: *pullio