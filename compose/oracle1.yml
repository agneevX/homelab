version: '3.8'

services:

  blocky:
    image: spx01/blocky
    container_name: blocky
    restart: unless-stopped
    ports:
      - 127.0.0.1:1201:53/udp
    environment:
      - TZ=Asia/Kolkata
    volumes:
      - type: bind
        source: /opt/appdata/blocky/blocky.yml
        target: /app/config.yml
    labels:
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.discord.webhook=${DISCORD_WEBHOOK}"

  unpackerr:
    container_name: unpackerr
    image: hotio/unpackerr
    restart: unless-stopped
    environment:
      # Sonarr
      - UN_SONARR_0_URL=
      - UN_SONARR_0_API_KEY=
      # Radarr
      - UN_RADARR_0_URL=
      - UN_RADARR_0_API_KEY= 
      # Radarr4K
      - UN_RADARR_1_URL=
      - UN_RADARR_1_API_KEY=
      # Sonarr2
      - UN_SONARR_1_URL=http://sonarr2:8989
      - UN_SONARR_1_API_KEY=
      - PUID=1001
      - PGID=1001
      - TZ=Asia/Kolkata
    volumes:
      - /home/ubuntu/drive-local/local/qbt:/drive/local/qbt
      - type: tmpfs
        target: /config
        tmpfs:
          size: 1mb
    labels:
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.discord.webhook=${DISCORD_WEBHOOK}"

  openspeedtest:
    image: openspeedtest/latest
    container_name: openspeedtest
    restart: unless-stopped
    ports:
      - 9999:3000
    labels:
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.discord.webhook=${DISCORD_WEBHOOK}"

  adguardhome:
    container_name: adguardhome
    image: adguard/adguardhome:edge
    restart: unless-stopped
    network_mode: host
    healthcheck:
      test: "/bin/netstat -pant 2> /dev/null | /bin/grep 53 > /dev/null"
    environment:
      - TZ=Asia/Kolkata
    volumes:
      - /opt/appdata/adguardhome/workdir:/opt/adguardhome/work
      - /opt/appdata/adguardhome/config:/opt/adguardhome/conf
    labels:
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.discord.webhook=${DISCORD_WEBHOOK}"

  prowlarr:
    container_name: prowlarr
    image: hotio/prowlarr:nightly
    restart: unless-stopped
    ports:
      - 9696:9696
    healthcheck:
      test: ["CMD", "curl", "localhost:9696", "-fso", "/dev/null"]
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=Asia/Kolkata
    volumes:
      - /opt/appdata/prowlarr:/config
    labels:
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.discord.webhook=${DISCORD_WEBHOOK}"

  sonarr2:
    container_name: sonarr2
    image: hotio/sonarr:nightly
    restart: unless-stopped
    ports:
      - 8989:8989
    healthcheck:
      test: ["CMD", "curl", "localhost:8989", "-fso", "/dev/null"]
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=Asia/Kolkata
    volumes:
      - /opt/appdata/sonarr:/config
      - /mnt/mfs-drive:/drive
    labels:
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.discord.webhook=${DISCORD_WEBHOOK}"

  socks5-proxy:
    image: serjs/go-socks5-proxy
    container_name: socks5-proxy
    restart: unless-stopped
    ports:
      - 32069:1080
    environment:
      - TZ=Asia/Kolkata
      - PROXY_USER=agneev
      - PROXY_PASSWORD=
    labels:
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.discord.webhook=${DISCORD_WEBHOOK}"

  overseerr:
    container_name: overseerr
    image: hotio/overseerr
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "localhost:5055", "-fso", "/dev/null"]
    ports:
      - 5055:5055
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=Asia/Kolkata
    volumes:
      - /opt/appdata/overseerr:/config
    labels:
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.discord.webhook=${DISCORD_WEBHOOK}"

  bazarr:
    container_name: bazarr
    image: hotio/bazarr
    restart: unless-stopped
    ports:
      - 6767:6767
    healthcheck:
      test: ["CMD", "curl", "localhost:6767", "-fso", "/dev/null"]
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=Asia/Kolkata
    volumes:
      - /opt/appdata/bazarr:/config
      - /mnt/mfs-drive:/drive
    labels:
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.discord.webhook=${DISCORD_WEBHOOK}"

#  jackett:
#    container_name: jackett
#    image: hotio/jackett
#    restart: unless-stopped
#    ports:
#      - 9117:9117
#    healthcheck:
#      test: ["CMD", "curl", "localhost:9117", "-fso", "/dev/null"]
#    environment:
#      - PUID=1001
#      - PGID=1001
#      - UMASK=002
#      - TZ=Asia/Kolkata
#    volumes:
#      - /opt/appdata/jackett:/config
#    labels:
#      - "org.hotio.pullio.update=true"
#      - "org.hotio.pullio.notify=true"
#      - "org.hotio.pullio.discord.webhook=${DISCORD_WEBHOOK}"

  nginxproxymanager:
    container_name: nginxproxymanager
    image: jc21/nginx-proxy-manager
    restart: unless-stopped
    ports:
      - 80:80
      - 81:81
      - 443:443
    environment:
      DB_SQLITE_FILE: "/data/npm_db.sqlite"
      DISABLE_IPV6: "true"
    volumes:
      - /opt/appdata/nginx-proxy-manager/data:/data
      - /opt/appdata/nginx-proxy-manager/letsencrypt:/etc/letsencrypt
    labels:
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.discord.webhook=${DISCORD_WEBHOOK}"

  qbittorrent:
    container_name: qbittorrent
    image: hotio/qflood
    restart: unless-stopped
    ports:
      - 8100:8080
      - 8101:3000
    healthcheck:
      test: ["CMD", "curl", "localhost:8080", "-fso", "/dev/null"]
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=Asia/Kolkata
    volumes:
      - /opt/appdata/qbittorrent:/config
      - /home/ubuntu/drive-local/local/qbt:/drive/local/qbt
      - type: bind
        source: /home/ubuntu/scripts/qbt.sh
        target: /scripts/qbt.sh
        read_only: true
    labels:
      - "org.hotio.pullio.update=true"
      - "org.hotio.pullio.notify=true"
      - "org.hotio.pullio.discord.webhook=${DISCORD_WEBHOOK}"